# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Allow envvar stuff
        run: echo ACTIONS_ALLOW_UNSECURE_COMMANDS=true >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - id: next_version
        uses: zwaldowski/semver-release-action@v1
        with:
          prefix: v
          dry_run: true
          bump: patch
          github_token: ${{ secrets.GITHUB_TOKEN }}
      # Do something to modify the repo using `${{ steps.next_version.outputs.version }}`.
      - run: echo "${{ steps.next_version.outputs.version }}"
      - name: Update chart semver2
        run: |
          find . -name Chart.yaml | xargs sed -i 's/^version: .*/version: ${{ steps.next_version.outputs.version}}/' 
          git commit -am "Bump version"
          git push
          echo ::set-output name=sha::$(git rev-parse HEAD)

      - name: Tag new SemVer2
        uses: zwaldowski/semver-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ steps.git_commit.outputs.sha }}

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: Releaser and Host Chart
        uses: helm/chart-releaser-action@v1.2.1
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

